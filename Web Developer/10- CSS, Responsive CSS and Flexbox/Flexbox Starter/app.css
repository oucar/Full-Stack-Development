body {
    font-family: 'Open Sans', sans-serif;
}
h1 {
    text-align: center;
}

#container {
    background-color: #003049;
    width: 90%;
    height: 500px;
    margin: 0 auto;
    border: 5px solid #003049;

    /* Flex */
    display: flex;

    /*
        row, row-reverse, column, column-reverse
    */
    flex-direction: row;    /* row by default, in this example (flex-direction: column) main axis is column. so flex-end will push them to the bottom */ 


    /*
        flex-start, flex-end
        center;                 --> centers
        space-between;          --> leaves space between elements 
        space-around;           --> leaves space between elements and between elements and their parents
        space-evenly;           --> same as space-around, but more evenly
    
    */
    justify-content: center;        /* flex-start by default*/


    /*
        wrap, wrap-reverse
        if their parent is bigger than all of their sizes, they split around
        !!!wrap changes the main axis (from row to column, or from column to row)
    */

    flex-wrap: wrap;

    /*
        IF THERE'S WRAP, USE WRAP + align content
        IF THERE'S NO WRAP, USE ALIGN-ITEMS: CENTER!

        align-items: in the cross axis!!
        justify-content: in the main axis!!

        flex-start, flex-end, center,
        baseline --> useful for writing on divs : https://stackoverflow.com/questions/34606879/whats-the-difference-between-flex-start-and-baseline
    */
    align-items:   center;

    /*

        align content works if there's wrap or wrap reverse!
        space-between, space-around, flex-start, flex-end, center

    */

    /*align-content: flex-start;*/          /*center, groups them together*/

    /*
        flex-basis: height or width (depends) along the main axis
    
    */
    /*flex-basis:400px;*/
}   

    /*  Positions one indiviual element.
    Doesn't work if align-content used.

    */

div:nth-of-type(3){
    align-self: flex-end;
}

div:nth-of-type(2){
    align-self: flex-start;
}

div:nth-of-type(1){
    /*takes out 1x of the available space*/
    flex-grow: 1;

}

div:nth-of-type(5){
    /*takes out 2x of the available space*/
    flex-grow: 2;
}




#container div{
    width: 60px;
    height: 200px;
}


/* Example 2 */
/*flex: https://developer.mozilla.org/en-US/docs/Web/CSS/flex*/
/*
The flex-basis CSS property sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with box-sizing.
*/
/*
flex grow and flex shrink - how fast or how slow it grows or gets smaller depends on the screen size
*/
main{
    width: 80%;
    margin: 0 auto;
    border: 5px solid black;
    height: 500px;
    display:flex;
}

main .sidebar {
    background-color: plum;
    flex: 1 2 300px;
}

main .maincontent{
    background-color: coral;
    flex:1 1 800px;
}


